(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{434:function(r,a,t){"use strict";t.r(a);var v=t(62),_=Object(v.a)({},(function(){var r=this,a=r.$createElement,t=r._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"http代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http代理"}},[r._v("#")]),r._v(" HTTP代理")]),r._v(" "),t("p",[r._v("HTTP 是基于 请求-响应 模型的协议。一般都是客户端发起请求，服务端响应。")]),r._v(" "),t("p",[r._v("也有特殊的情况，就是引入了代理服务器，代理服务器充当中间代理人的作用。")]),r._v(" "),t("h2",{attrs:{id:"代理服务器的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理服务器的作用"}},[r._v("#")]),r._v(" 代理服务器的作用")]),r._v(" "),t("ol",[t("li",[t("p",[r._v("负载均衡。客户端请求会先到达代理服务器，然后由代理服务器来通过一定的算法来转发到源服务器。并且让各台源服务器负载尽量平衡。这样的算法有很多（随机算法、轮询、一致性 hash、LRU）。")])]),r._v(" "),t("li",[t("p",[r._v("保障安全。利用心跳极值监控后台的服务器，一旦发现故障就将其踢出集群。并且对于上下行的数据进行过滤。对非法 IP 限流，这些都是代理服务器的作用。")])]),r._v(" "),t("li",[t("p",[r._v("缓存代理。将其内容缓存到代理服务器，是的客户端可以直接从代理服务器获取资源。")])])]),r._v(" "),t("h2",{attrs:{id:"相关字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关字段"}},[r._v("#")]),r._v(" 相关字段")]),r._v(" "),t("h3",{attrs:{id:"via"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#via"}},[r._v("#")]),r._v(" Via")]),r._v(" "),t("p",[r._v("代理服务器需要标明自己的身份，在 HTTP 传输中留下自己的痕迹。")]),r._v(" "),t("p",[r._v("通过 Via 字段。")]),r._v(" "),t("p",[r._v("客户端 -> 代理服务器1 -> 代理服务器2 -> 源服务器")]),r._v(" "),t("p",[r._v("在源服务器收到请求后，会在请求头中拿到这个字段")]),r._v(" "),t("p",[r._v("Via: proxy_server1, proxy_server2")]),r._v(" "),t("p",[r._v("源服务器响应时，客户端的响应头会拿到")]),r._v(" "),t("p",[r._v("Via: proxy_server1, proxy_server2")]),r._v(" "),t("p",[r._v("Via 中代理的顺序就是 HTTP 传输中报文传达的顺序。")]),r._v(" "),t("h3",{attrs:{id:"x-forwarded-for"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x-forwarded-for"}},[r._v("#")]),r._v(" X-Forwarded-For")]),r._v(" "),t("p",[r._v("用来记录请求方的 IP 地址。")]),r._v(" "),t("p",[r._v("产生的问题：")]),r._v(" "),t("p",[r._v("X-Forwarded-For 这个字段记录的是请求方的 IP，每经过一个不同的代理，这个字段名都是会变的，。")]),r._v(" "),t("ol",[t("li",[r._v("意味着代理必须解析 HTTP 请求头，然后修改，性能下降。")]),r._v(" "),t("li",[r._v("在 HTTPS 通信加密的过程中，原始报文是不允许修改的。")])]),r._v(" "),t("p",[r._v("代理协议，一般使用明文版本，在 HTTP 请求行上加上文本.")]),r._v(" "),t("p",[r._v("请求地址 + 接收方地址 + 请求端口 + 接收端口\nPROXY TCP4 0.0.0.1 0.0.0.2 111 2222")]),r._v(" "),t("h3",{attrs:{id:"x-real-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x-real-ip"}},[r._v("#")]),r._v(" X-Real-IP")]),r._v(" "),t("p",[r._v("获取用户真实 IP 的字段，不管经历多少个代理，这个字段始终记录最初的客户端的 IP。")]),r._v(" "),t("h3",{attrs:{id:"x-forwarded-host"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x-forwarded-host"}},[r._v("#")]),r._v(" X-Forwarded-Host")]),r._v(" "),t("p",[r._v("客户端的域名")]),r._v(" "),t("h3",{attrs:{id:"x-forwarded-proto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x-forwarded-proto"}},[r._v("#")]),r._v(" X-Forwarded-Proto")]),r._v(" "),t("p",[r._v("客户端的协议名")])])}),[],!1,null,null,null);a.default=_.exports}}]);